/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emslibrary;

import java.io.File;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.PDFTextStripperByArea;

/**
 *
 * @author Arunima
 */
public class RentBooks extends javax.swing.JFrame {
    /**
     * Creates new form RentBooks
     */
    public RentBooks(String rb,String bn,String um) {
        initComponents();
        uname1 = um;
        rb1 = rb;
        label1.setText(rb1);
        try {
            ResultSet rs1,rs2;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String sql = "select date(sysdate()) as issue_date";
            PreparedStatement ps = con.prepareStatement(sql);
            rs1 = ps.executeQuery();
            while (rs1.next()){  
                label4.setText(rs1.getString("issue_date"));
                i_date = rs1.getString("issue_date");
            }
            String sql1 = "SELECT DATE_ADD(date(sysdate()), INTERVAL 1 MONTH) as ret_date";
            PreparedStatement ps1 = con.prepareStatement(sql1);
            rs2 = ps1.executeQuery();
            while (rs2.next()) {
                lab5.setText(rs2.getString("ret_date"));
                r_date = rs2.getString("ret_date");
            }   
        }
        catch(Exception e) {
            System.out.println(e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        lab5 = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Rent A Book!");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Contents: ");

        label1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText("Today's Date: ");

        label3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label3.setText("Return By: ");

        label4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label4.setName("label4"); // NOI18N

        lab5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lab5.setName("lab5"); // NOI18N

        jButton1.setText("Click to confirm order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Verify authenticity");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(94, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(label3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                .addComponent(lab5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lab5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addGap(53, 53, 53)
                .addComponent(jButton2)
                .addGap(18, 18, 18))
        );

        label4.getAccessibleContext().setAccessibleName("label4");
        lab5.getAccessibleContext().setAccessibleName("lab5");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String buildQuery = label1.getText();
        String[] queryElements = buildQuery.split(" by  ");
        String r1 = queryElements[0];
        String rentTit = r1.substring(1);
        String rentAuthor = queryElements[1];
        System.out.println(rentTit);
        System.out.println(rentAuthor);
        try {   
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String sql = "select bookCategory,bookid,path from books where bookTitle = ? and bookAuthor = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,rentTit);
            ps.setString(2,rentAuthor);
            System.out.println(ps.toString());
            ResultSet rs = ps.executeQuery();
            rs.next();
            String rentCategory = rs.getString("bookCategory");
            String filepath = rs.getString("path");
            String rentID = rs.getString("bookid");
            
            //build string to add into customers database
            String builds = "insert into " + uname1 + " (bookTitle , bookid, bookCategory , bookAuthor,path) values ";
            builds = builds + "( ?,?,?,?,?) ";
            PreparedStatement ps1 = con.prepareStatement(builds);
            ps1.setString(1,rentTit);
            ps1.setString(2,rentID);
            ps1.setString(3,rentCategory);
            ps1.setString(4, rentAuthor );
            ps1.setString(5,filepath);
            ps1.execute();

            String j = "insert into rented_books (username,bookid,start_date,return_date) values(?,?,?,?)";
            PreparedStatement y = con.prepareStatement(j);
            y.setString(1,uname1);
            y.setString(2,rentID);
            y.setString(3,i_date);
            y.setString(4,r_date);
            y.execute();
                              
            //delete book from book database
            String buildt = "delete from books where bookid = ?";
            PreparedStatement ps2 = con.prepareStatement(buildt);
            ps2.setString(1,rentID);
            ps2.execute();
            JOptionPane.showMessageDialog(this, "Order confirmed! ");  
        }
        catch(Exception e) {
            System.out.println(e);
        }
        this.dispose();
        CustomerMenu cm = new CustomerMenu(uname1);
        cm.setVisible(true);  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        CustomerMenu cm =  new CustomerMenu(uname1);
        cm.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public static byte[] getSHA(String input) throws NoSuchAlgorithmException { 
        // Static getInstance method is called with hashing SHA  
        MessageDigest md = MessageDigest.getInstance("SHA-256");  
  
        // digest() method called  
        // to calculate message digest of an input  
        // and return array of byte 
        return md.digest(input.getBytes(StandardCharsets.UTF_8));  
    } 
    
    public static String toHexString(byte[] hash) {
        // Convert byte array into signum representation  
        BigInteger number = new BigInteger(1, hash);  
  
        // Convert message digest into hex value  
        StringBuilder hexString = new StringBuilder(number.toString(16));  
  
        // Pad with leading zeros 
        while (hexString.length() < 32)  
        {  
            hexString.insert(0, '0');  
        }  
  
        return hexString.toString();  
    } 
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String buildQuery = label1.getText();
        String[] queryElements = buildQuery.split(" by  ");
        String r1 = queryElements[0];
        String rentTit = r1.substring(1);
        String rentAuthor = queryElements[1];
        System.out.println(rentTit);
        System.out.println(rentAuthor);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String sql = "select bookid,path from books where bookTitle = ? and bookAuthor = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,rentTit);
            ps.setString(2,rentAuthor);
            ResultSet rs = ps.executeQuery();
            rs.next();
            //generate hash for path
            String line=null;
            //generate SHA256 hash
            //read PDF and then generate
            try {
                PDDocument document = PDDocument.load(new File(rs.getString("path")));
                if (!document.isEncrypted())
                {
                        PDFTextStripperByArea stripper = new PDFTextStripperByArea();
                        stripper.setSortByPosition(true);
                        PDFTextStripper Tstripper = new PDFTextStripper();
                        String str = Tstripper.getText(document);
                        Scanner scn = null;					
                        scn = new Scanner(str);

                        while (scn.hasNextLine()) 
                        {		
                                line = line + scn.nextLine();
                                System.out.println("\n"+line);
                        }	
                }
                document.close();
            }
            catch (Exception e) {
                    e.printStackTrace();
            }
            //PDF Read in "line"
            //Obtain SHA256 for "line"
            String jh = toHexString(getSHA(line));
            //compare with hash in hashtable
            String gj = "select hashval from hashtable where bookid = ?";
            PreparedStatement nm = con.prepareStatement(gj);
            nm.setString(1,rs.getString("bookid"));
            ResultSet y = nm.executeQuery();
            y.next();
            //compare
            if(y.getString("hashval").equals(jh)) {
                JOptionPane.showMessageDialog(this,"Document is legit! Verified! ");
            }
            else {
                JOptionPane.showMessageDialog(this,"Document is not legit. Please register a complaint! ");
            }            
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RentBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RentBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RentBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RentBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RentBooks(uname1,bname,rb1).setVisible(true);
                
            }
        });
        
    }
public static String uname1;
public static String rb1;
public static String bname;
public static String i_date;
public static String r_date;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private java.awt.Label lab5;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    // End of variables declaration//GEN-END:variables
}
