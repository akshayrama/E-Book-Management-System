/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emslibrary;

import java.io.File;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;
import javax.swing.JOptionPane;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.PDFTextStripperByArea;

/**
 *
 * @author Akshay
 */
public class BuyBooks extends javax.swing.JFrame {

    /**
     * Creates new form BuyBooks
     */
    public BuyBooks(String s1, String s2, String s3) {
        initComponents();
        buybook = s1;
        bname = s2;
        unam = s3;
        jLabel6.setText(buybook);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String sql = "select price from books where bookTitle = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,bname);
            ResultSet rs = ps.executeQuery();
            rs.next();
            pr = rs.getDouble("price");
            jLabel5.setText(pr.toString());
            
        }
        catch(Exception e){
            System.out.println(e);
        }
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Buy A Book!");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Contents:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Book Amount:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jButton1.setText("Confirm Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Verify Authenticity");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel6)))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String buildQuery = jLabel6.getText();
        String[] queryElements = buildQuery.split(" by  ", 2);
        String buyTit = queryElements[0].substring(1); 
        String buyAuthor = queryElements[1];
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String sql = "select bookCategory,bookid,price,path from books where bookTitle = ? and bookAuthor = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,buyTit);
            ps.setString(2,buyAuthor);
            System.out.println(ps.toString());
            ResultSet rs = ps.executeQuery();
            rs.next();
            String filepath = rs.getString("path");
            String buyCategory = rs.getString("bookCategory");
            String buyID = rs.getString("bookid");
            //build string to add into customers database      
            String builds = "insert into " + unam + " (bookTitle , bookid, bookCategory , bookAuthor,price, path) values ";
            builds = builds + "( ?,?,?,?,?,?) ";
            PreparedStatement ps1 = con.prepareStatement(builds);
            ps1.setString(1,buyTit);
            ps1.setString(2,buyID);
            ps1.setString(3,buyCategory);
            ps1.setString(4, buyAuthor );
            ps1.setDouble(5,pr);
            ps1.setString(6,filepath);
            ps1.execute();
            String sq1 = "select wallet from cash where username = ? " ;
            PreparedStatement w = con.prepareStatement(sq1);
            w.setString(1,unam);
            ResultSet t = w.executeQuery();
            t.next();
            Double r = t.getDouble("wallet");   
            if(r-pr < 0) {
                JOptionPane.showMessageDialog(this,"Insufficient funds");
                this.dispose();
                CustomerMenu cm = new CustomerMenu(unam);
                cm.setVisible(true);
            }
            Double res = r - pr;
            String sq = "update cash" ;
            sq =sq + "  set wallet = ? where username = ?";
            PreparedStatement ps4 = con.prepareStatement(sq);  
            ps4.setDouble(1,res);
            ps4.setString(2,unam);
            ps4.execute();
            //delete book from book database
            String buildt = "delete from books where bookid = ?";
            PreparedStatement ps2 = con.prepareStatement(buildt);
            ps2.setString(1,buyID);
            ps2.execute();
                
            JOptionPane.showMessageDialog(this,"Order confirmed! ");

        }
        catch(Exception e) {
            System.out.println(e);
        }
        this.dispose();
        CustomerMenu cm = new CustomerMenu(unam);
        cm.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        CustomerMenu cm = new CustomerMenu(unam);
        cm.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

      public static byte[] getSHA(String input) throws NoSuchAlgorithmException { 
        // Static getInstance method is called with hashing SHA  
        MessageDigest md = MessageDigest.getInstance("SHA-256");  
  
        // digest() method called  
        // to calculate message digest of an input  
        // and return array of byte 
        return md.digest(input.getBytes(StandardCharsets.UTF_8));  
    } 
    
    public static String toHexString(byte[] hash) { 
        // Convert byte array into signum representation  
        BigInteger number = new BigInteger(1, hash);  
  
        // Convert message digest into hex value  
        StringBuilder hexString = new StringBuilder(number.toString(16));  
  
        // Pad with leading zeros 
        while (hexString.length() < 32)  
        {  
            hexString.insert(0, '0');  
        }  
  
        return hexString.toString();  
    } 
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String buildQuery = jLabel6.getText();
        String[] queryElements = buildQuery.split(" by  ", 2);
        String buyTit = queryElements[0].substring(1);
        String buyAuthor = queryElements[1];
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String sql = "select bookCategory,bookid,price,path from books where bookTitle = ? and bookAuthor = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1,buyTit);
            ps.setString(2,buyAuthor);
            ResultSet rs = ps.executeQuery();
            rs.next();
            //generate hash for path
            String line=null;
            //generate SHA256 hash
            //read PDF and then generate
            try {
                
                PDDocument document = PDDocument.load(new File(rs.getString("path")));
		document.getClass();
		if (!document.isEncrypted())
		{
                    PDFTextStripperByArea stripper = new PDFTextStripperByArea();
                    stripper.setSortByPosition(true);
                    PDFTextStripper Tstripper = new PDFTextStripper();
                    String str = Tstripper.getText(document);
                    Scanner scn = null;					
                    scn = new Scanner(str);
                    while (scn.hasNextLine()) 
                    {		
			line = line + scn.nextLine();
					
                    }	
		}
		document.close();
            }
            catch (Exception e) {
		e.printStackTrace();
            }
            //PDF Read in "line"
            //Obtain SHA256 for "line"
            String jh = toHexString(getSHA(line)); 
            //compare with hash in hashtable    
            String gj = "select hashval from hashtable where bookid = ?";
            PreparedStatement nm = con.prepareStatement(gj);
            nm.setString(1,rs.getString("bookid"));
            ResultSet y = nm.executeQuery();
            y.next();
            //compare
            if(y.getString("hashval").equals(jh)) {
                JOptionPane.showMessageDialog(this,"Document is legit! Verified! ");
            }
            else {
                JOptionPane.showMessageDialog(this,"Document is not legit. Please register a complaint! ");
            }    
        }
        catch(Exception e){
            System.out.println(e);
        }       
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuyBooks(buybook,bname,unam).setVisible(true);
            }
        });
    }
    public static String buybook;
    public static String bname;
    public static String unam;
    public static Double pr;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
