/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emslibrary;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Arunima
 */
public class BookListing extends javax.swing.JFrame {

    /**
     * Creates new form BookListing
     */
    DefaultListModel<String> listModel;
    public BookListing(String um) {
        initComponents();
        un = um;
        listModel = new DefaultListModel<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String h = "select bookTitle,bookAuthor from " + un + " where price is null";
            PreparedStatement ps = con.prepareStatement(h);
            ResultSet rs = ps.executeQuery();
            String buildBook = null;
            while(rs.next()){
                buildBook = "\n";
                buildBook = buildBook + rs.getString("bookTitle");
                bookName =  rs.getString("bookTitle");
                buildBook = buildBook + " by  ";
                buildBook = buildBook + rs.getString("bookAuthor");
                listModel.addElement(buildBook);
                jList2.setModel(listModel);
            }
        }
        catch(Exception e){
                System.out.println(e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();

        jScrollPane2.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Book shelf:");

        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList2);

        jButton2.setText("Exit to Menu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(230, 230, 230)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(375, 375, 375)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            String selectedbook = jList2.getSelectedValue();
            System.out.println(selectedbook);
            String elts[] = selectedbook.split(" by  ");
            String rt = elts[0];
            String ret_auth = elts[1];
            String ret_title = rt.substring(1);
            String qu = "select bookid,bookCategory,path from " + un + " where bookTitle = ? and bookAuthor = ?";
            PreparedStatement hi  = con.prepareStatement(qu);
            hi.setString(1,ret_title);
            hi.setString(2,ret_auth);
            System.out.println(hi.toString());
            ResultSet ri = hi.executeQuery();
            ri.next();
            String another = "select return_date from rented_books where bookid = ?";
            PreparedStatement ph = con.prepareStatement(another);
            ph.setInt(1,ri.getInt("bookid"));
            ResultSet re = ph.executeQuery();
            re.next();
            //check for return validity
            String sql = " select date(sysdate()) as todays_date";
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            rs.next();
            System.out.println(rs.getDate("todays_date"));
            System.out.println(re.getDate("return_date"));
            if(rs.getDate("todays_date").compareTo(re.getDate("return_date")) > 0) {
                //fine imposed
                JOptionPane.showMessageDialog(this,"You are fined 20.00 for late return!");
                String g = "update cash set wallet = wallet - 20.00 where username = ? ";
                PreparedStatement j = con.prepareStatement(g);
                j.setString(1,un);
                j.execute();
                
            }
            //remove from rented_books
            String we = "delete from rented_books where bookid = ?";
            PreparedStatement fd = con.prepareStatement(we);
            fd.setInt(1, ri.getInt("bookid"));
            fd.execute();
            
            //delete from username table
            String we1 = "delete from " + un + " where bookid = ?";
            PreparedStatement fd1 = con.prepareStatement(we1);
            fd1.setInt(1, ri.getInt("bookid"));
            fd1.execute();
            
            //insert into books
            String jkl = "insert into books(bookTitle,bookCategory,bookid,bookAuthor,price,path) values(?,?,?,?,?,?)";
            PreparedStatement hg = con.prepareStatement(jkl);
            hg.setString(1,ret_title);
            hg.setString(2,ri.getString("bookCategory"));
            hg.setInt(3, ri.getInt("bookid"));
            hg.setString(4, ret_auth);
            hg.setDouble(5, 100.00); 
            hg.setString(6,ri.getString("path"));
            hg.execute();
            JOptionPane.showMessageDialog(this, "BOOK RETURNED! ");
            
        }
        catch(Exception e){
            System.out.println(e);
        }
        this.dispose();
        CustomerMenu cm = new CustomerMenu(un);
        cm.setVisible(true);
     
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        CustomerMenu cm = new CustomerMenu(un);
        cm.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookListing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        try {
            
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/emslibrary","root","password");
            
        }
        catch(Exception e){
            System.out.println(e);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookListing(un).setVisible(true);
            }
        });
       
    }
    public static String un;
    public static String bookName;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
